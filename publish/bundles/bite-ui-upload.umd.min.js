!function(o,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/common")):"function"==typeof define&&define.amd?define("bite-ui/upload",["exports","@angular/core","@angular/common"],e):e(((o="undefined"!=typeof globalThis?globalThis:o||self)["bite-ui"]=o["bite-ui"]||{},o["bite-ui"].upload={}),o.ng.core,o.ng.common)}(this,(function(o,e,n){"use strict";var i=function(){function o(){this.resultEvent=new e.EventEmitter,this.resetTouch=new e.EventEmitter,this.fileList=[],this.success=!1,this.error=!1,this.uploading=!1,this.showModalSuccess=!1,this.showModalLoading=!1}return Object.defineProperty(o.prototype,"classname",{get:function(){var o=[];return(this.disabled||this.loading)&&o.push("upload-disabled"),this.touch&&o.push("upload-error"),o.join(" ")},enumerable:!1,configurable:!0}),o.prototype.ngOnInit=function(){this.disabled&&this.value&&this.fileList.push({file:this.value,status:"finished"})},o.prototype.ngOnChanges=function(o){o.defaultValue&&o.defaultValue.currentValue&&(this.fileList=[],this.fileList.push({file:o.defaultValue.currentValue,status:"finished"}))},o.prototype.ngAfterViewInit=function(){this.fileDomInitUpload()},o.prototype.fileDomInitUpload=function(){var o=this.inputRef,e=this;this.inputRef.nativeElement.onchange=function(n){for(var i=o.nativeElement.files,t=0,a=i.length;t<a;t++)e.uploadFile(i[t])}},o.prototype.uploadFile=function(o){var e=this;this.uploading=!0,this.showModalLoading=!0,this.fileList.push({file:o,status:"uncommit"}),this.uploadFileFn(o).subscribe((function(o){e.uploadResult=o,e.success=!0,e.fileList[0].status="finished",e.fileList[0].downloadUrl=o.downloadUrl,e.fileList[0].previewUrl=o.previewUrl,console.log("this.fileList",e.fileList),e.resultEvent.emit(e.uploadResult),e.showModalLoading=!1,e.showModalSuccess=!0,setTimeout((function(){e.showModalSuccess=!1,e.uploading=!1}),1e3)}),(function(o){console.log(o),e.uploadResult=o,e.showModalLoading=!1,e.error=!0}))},o.prototype.chooseFile=function(){this.disabled||0===this.fileList.length&&(this.inputRef.nativeElement.click(),this.resetTouch.emit())},o.prototype.handleDelete=function(){this.inputRef.nativeElement.value="",this.fileList=[],this.success=!1,this.error=!1},o.prototype.reUpload=function(){this.handleDelete(),this.chooseFile()},o}();i.decorators=[{type:e.Component,args:[{selector:"bite-upload",template:'<div class="upload-container">\n  <div class="upload-title" *ngIf="title && !disabled">\n    {{ title }}\n  </div>\n\n  <div class="upload-icon-content" [class]="classname" (click)="chooseFile()">\n    <span class="upload-icon" *ngIf="fileList.length === 0 && !error">\n      <i class="iconfont icon-plus"></i>\n    </span>\n    <ng-container *ngFor="let file of fileList">\n      <div class="file-item">\n        <div class="file-icon" *ngIf="file.file?.format">\n          <img *ngIf="file.file?.format?.indexOf(\'image\') > -1" src="../../common/assets/pic.png" alt="">\n          <img *ngIf="file.file?.format?.indexOf(\'pdf\') > -1" src="../../common/assets/pdf.png" alt="">\n        </div>\n        <div class="file-icon" *ngIf="file.file?.type">\n          <img *ngIf="file.file?.type?.indexOf(\'image\') > -1" src="../../common/assets/pic.png" alt="">\n          <img *ngIf="file.file?.type?.indexOf(\'pdf\') > -1" src="../../common/assets/pdf.png" alt="">\n        </div>\n        <p class="file-name">\n          <a [href]="file?.previewUrl||file?.file?.previewUrl" target="_blank">{{ file?.file?.name }}</a>\n        </p>\n        <div *ngIf="!disabled" class="file-operation" (click)="reUpload(); $event.stopPropagation()">\n          <i class="iconfont icon-reset-arrow"></i>\n        </div>\n      </div>\n    </ng-container>\n    <ng-container *ngIf="uploading">\n      <div *ngTemplateOutlet="MODAL"></div>\n    </ng-container>\n  </div>\n  <div class="accept-type-content" *ngIf="acceptTip && !disabled && !error">\n    {{ acceptTip }}\n  </div>\n  <div class="accept-type-content error" *ngIf="error">\n    <div>{{ uploadResult.msg }}</div>\n    <a class="bi-primary-text reupload-link" (click)="reUpload(); $event.stopPropagation()">{{ \'inbox.button.reUpload\'}}</a>\n  </div>\n  <input #INPUT_REF style="display: none;" type="file" [accept]="accept">\n</div>\n\n<ng-template #MODAL>\n  <div class="upload-modal">\n    <span *ngIf="showModalLoading" class="modal-icon loading-icon">\n    </span>\n    <span *ngIf="showModalSuccess" class="modal-icon modal-success-icon">\n      <i class="iconfont icon-duihao"></i>\n    </span>\n    <span *ngIf="error" class="modal-icon modal-error-icon" (click)="reUpload(); $event.stopPropagation()">\n      <i class="iconfont icon-reset-arrow"></i>\n    </span>\n  </div>\n</ng-template>',styles:[':root{--mobile-bg:linear-gradient(#4db2ee,#fff);--primary-color:#4db2ee;--primary-color-02:rgba("#4DB2EE",0.2)}@keyframes spinning{to{transform:rotate(1turn)}}@-webkit-keyframes spinning{to{transform:rotate(1turn)}}.upload-container{height:auto;width:100%}.upload-container .upload-title{color:#3e4c5c;font-weight:700;margin-bottom:16px}.upload-container .center-icon,.upload-container .upload-icon-content .upload-icon,.upload-container .upload-icon-content .upload-modal .modal-icon{bottom:0;height:26px;left:0;line-height:26px;margin:auto;position:absolute;right:0;text-align:center;top:0;width:26px}.upload-container .upload-icon-content{background:#f8f9f9;border:2px dashed transparent;border-radius:4px;box-sizing:border-box;color:#717f86;cursor:not-allowed;min-height:60px;position:relative;transition:all .3s ease;width:100%}.upload-container .upload-icon-content .upload-modal{background:hsla(0,0%,100%,.6);border-radius:4px;height:100%;left:0;position:absolute;top:0;width:100%}.upload-container .upload-icon-content .upload-modal .modal-success-icon{color:var(--primary-color)}.upload-container .upload-icon-content .upload-modal .modal-success-icon .iconfont{font-size:26px}.upload-container .upload-icon-content .upload-modal .modal-error-icon{color:#d05f5f}.upload-container .upload-icon-content .upload-icon .iconfont,.upload-container .upload-icon-content .upload-modal .modal-error-icon .iconfont{font-size:26px}.upload-container .upload-icon-content .file-item{align-items:flex-start;box-sizing:border-box;display:flex;flex-direction:row;justify-content:flex-start;margin-bottom:0;min-height:60px;padding:17px 12px;width:100%}.upload-container .upload-icon-content .file-item .file-icon{flex-shrink:0;height:25px;margin-right:10px;width:25px}.upload-container .upload-icon-content .file-item .file-icon img{height:100%;width:100%}.upload-container .upload-icon-content .file-item .file-name{flex-grow:1;line-height:20px;min-height:25px;word-break:break-all}.upload-container .upload-icon-content .file-item .file-name a{color:#000;text-decoration:none}.upload-container .upload-icon-content .file-item .file-operation{flex-shrink:0;height:16px;justify-self:flex-end;line-height:16px;width:25px}.upload-container .upload-icon-content .file-item:last-child{margin-bottom:0}.upload-container .upload-icon-content:not(.upload-disabled){border:2px dashed #707070;cursor:pointer}.upload-container .upload-icon-content:not(.upload-disabled):hover{background:var(--primary-color-02);border-color:var(--primary-color);color:var(--primary-color)}.upload-container .upload-icon-content.upload-error:not(.upload-disabled){border:2px dashed #d05f5f}.upload-container .upload-icon-content.upload-error:not(.upload-disabled) .upload-icon{color:#d05f5f}.upload-container .accept-type-content{color:#717f86;font-size:14px;padding-top:10px;text-align:left}.upload-container .accept-type-content.error{color:#d05f5f}.upload-container .reupload-link{cursor:pointer}.upload-container .reupload-link:hover{text-decoration:underline}.loading-icon{display:inline-block;height:26px;line-height:26px;position:relative;text-align:center;width:26px}.loading-icon:before{-webkit-animation:spinning 1s linear infinite;animation:spinning 1s linear infinite;border:3px solid #717f86;border-left-color:transparent;border-radius:50%;bottom:0;content:"";height:20px;left:0;margin:auto;position:absolute;right:0;top:0;width:20px}']}]}],i.ctorParameters=function(){return[]},i.propDecorators={uploadFileFn:[{type:e.Input}],accept:[{type:e.Input}],acceptTip:[{type:e.Input}],title:[{type:e.Input}],disabled:[{type:e.Input}],value:[{type:e.Input}],defaultValue:[{type:e.Input}],loading:[{type:e.Input}],touch:[{type:e.Input}],resultEvent:[{type:e.Output}],resetTouch:[{type:e.Output}],inputRef:[{type:e.ViewChild,args:["INPUT_REF"]}]};var t=function(){};t.decorators=[{type:e.NgModule,args:[{declarations:[i],exports:[i],imports:[n.CommonModule]}]}],o.UploadComponent=i,o.UploadModule=t,Object.defineProperty(o,"__esModule",{value:!0})}));
//# sourceMappingURL=bite-ui-upload.umd.min.js.map