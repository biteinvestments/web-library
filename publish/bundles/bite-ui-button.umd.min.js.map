{"version":3,"sources":["../../projects/bite-ui/button/button.component.ts","../../projects/bite-ui/button/button.module.ts"],"names":["ButtonComponent","this","type","loading","translate","color","dark","full","size","clickEvent","EventEmitter","Object","defineProperty","prototype","disabled","list","push","border","join","ngOnInit","handleClick","event","_disabled","emit","Component","args","selector","template","Input","Output","NgModule","declarations","exports","imports","CommonModule","MatButtonModule"],"mappings":"igBAuCE,SAAAA,IA7BSC,KAAAC,KAAiD,QAEjDD,KAAAE,SAAoB,EACpBF,KAAAG,UAAkC,SAClCH,KAAAI,MAA6C,GAC7CJ,KAAAK,MAAiB,EACjBL,KAAAM,MAAiB,EACjBN,KAAAO,KAAqC,SAEpCP,KAAAQ,WAAa,IAAIC,EAAAA,oBAE3BC,OAAAC,eAAIZ,EAAAa,UAAA,YAAS,KAAb,WACE,OAAOZ,KAAKa,UAAYb,KAAKE,yCAG/BQ,OAAAC,eAAIZ,EAAAa,UAAA,YAAS,KAAb,WACE,IAAME,EAAc,GAUpB,OATId,KAAKM,MACPQ,EAAKC,KAAK,kBAERf,KAAKO,MACPO,EAAKC,KAAK,MAAMf,KAAKO,KAAI,WAEvBP,KAAKgB,QACPF,EAAKC,KAAK,oBAELD,EAAKG,KAAK,sCAKnBlB,EAAAa,UAAAM,SAAA,aAGAnB,EAAAa,UAAAO,YAAA,SAAYC,GACNpB,KAAKqB,WAGTrB,KAAKQ,WAAWc,KAAKF,6BA9CxBG,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,cACVC,SAAA,ipEAMCC,EAAAA,wBACAA,EAAAA,uBACAA,EAAAA,yBACAA,EAAAA,qBACAA,EAAAA,oBACAA,EAAAA,oBACAA,EAAAA,oBACAA,EAAAA,sBACAA,EAAAA,0BACAC,EAAAA,gBCJH,iCARCC,EAAAA,SAAQL,KAAA,CAAC,CACRM,aAAc,CAAC/B,GACfgC,QAAS,CAAChC,GACViC,QAAS,CACPC,EAAAA,aACAC,EAAAA","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'bite-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss']\n})\nexport class ButtonComponent implements OnInit {\n\n \n  @Input() type?: 'flat' | 'stroked' | 'basic' | 'raised' = 'basic';\n  @Input() disabled?: boolean;\n  @Input() loading?: boolean = false;\n  @Input() translate?: 'denied' | 'access' = 'access';\n  @Input() color?: 'primary' | 'accent' | 'warn' | '' = '';\n  @Input() dark?: boolean = false;\n  @Input() full?: boolean = false;\n  @Input() size?: 'mini' | 'middle' | 'large' = 'middle';\n  @Input() border?: boolean;\n  @Output() clickEvent = new EventEmitter<any>();\n\n  get _disabled(): boolean {\n    return this.disabled || this.loading;\n  }\n\n  get classname(): string {\n    const list: any[] = [];\n    if (this.full) {\n      list.push('bi-button-full');\n    }\n    if (this.size) {\n      list.push(`bi-${this.size}-button`);\n    }\n    if (this.border) {\n      list.push('bi-border-button');\n    }\n    return list.join(' ');\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  handleClick(event: any): void {\n    if (this._disabled) {\n      return;\n    }\n    this.clickEvent.emit(event);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonComponent } from './button.component';\n\nimport { MatButtonModule } from '@angular/material/button';\n\n\n@NgModule({\n  declarations: [ButtonComponent],\n  exports: [ButtonComponent],\n  imports: [\n    CommonModule,\n    MatButtonModule\n  ]\n})\nexport class ButtonModule { }\n"]}