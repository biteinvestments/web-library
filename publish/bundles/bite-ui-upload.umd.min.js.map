{"version":3,"sources":["../../projects/bite-ui/upload/upload.component.ts","../../projects/bite-ui/upload/upload.module.ts"],"names":["UploadComponent","http","this","resultEvent","EventEmitter","resetTouch","fileList","success","error","uploading","showModalSuccess","showModalLoading","Object","defineProperty","prototype","name","disabled","loading","push","touch","join","ngOnInit","value","file","status","ngOnChanges","changes","defaultValue","currentValue","ngAfterViewInit","fileDomInitUpload","inputRef","_","nativeElement","onchange","e","files","i","ii","length","uploadFile","_this","uploadFileFn","subscribe","data","uploadResult","downloadUrl","previewUrl","console","log","emit","setTimeout","err","chooseFile","click","handleDelete","reUpload","Component","args","selector","template","HttpClient","Input","Output","ViewChild","NgModule","declarations","exports","imports","CommonModule"],"mappings":"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","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, Input, Output, EventEmitter, ElementRef, ViewChild, SimpleChanges } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n  // readonly apiPrefix = CommonSetting.API + '/v1.0/file';\n  // /**\n  //  * @description 上传文件\n  //  * @param file \n  //  * @param container \n  //  */\n  //  uploadFile(file: File, container?: FileContainer): Observable<any> {\n  //   const url = this.apiPrefix + '/upload';\n  //   const formData = new FormData();\n  //   formData.append('file', file);\n  //   if (container) {\n  //     formData.append('container', container);\n  //   }\n    \n  //   return this.http.post(url, formData).pipe(\n  //     map((res: Res) => {\n  //       if (res.success) {\n  //         return res.data;\n  //       }\n  //       throw { msg: res?.msg || 'some error', errorKey: res?.errorKey };\n  //     }),\n  //     catchError(this.logSv.handleError<Res>('Post upload File'))\n  //   )\n  // }\n@Component({\n  selector: 'bite-upload',\n  templateUrl: './upload.component.html',\n  styleUrls: ['./upload.component.scss']\n})\nexport class UploadComponent implements OnInit {\n\n  /**\n   * @description 上传文件\n   * @param file \n   * @param container \n   */\n  @Input() uploadFileFn: any\n\n  \n\n  @Input() accept?: string;\n  @Input() acceptTip?: string;\n  @Input() title?: string;\n  @Input() disabled?: boolean;\n  @Input() value?: any;\n  @Input() defaultValue?:any; // 异步回显值\n  @Input() loading?: boolean;\n  @Input() touch?: boolean;\n  @Output() resultEvent = new EventEmitter<any>();\n  @Output() resetTouch = new EventEmitter<any>();\n\n  @ViewChild('INPUT_REF') inputRef: ElementRef;\n  fileList = [];\n  uploadResult: any;\n  success = false;\n  error = false;\n  uploading = false;\n  showModalSuccess = false;\n  showModalLoading = false;\n\n  get classname(): string {\n    let name = [];\n    if (this.disabled || this.loading) {\n      name.push('upload-disabled')\n    }\n    if (this.touch) {\n      name.push('upload-error')\n    }\n    return name.join(' ');\n  }\n\n  constructor(\n    public http: HttpClient\n  ) { }\n\n  ngOnInit(): void {\n    if (this.disabled && this.value) {\n      this.fileList.push({ file: this.value, status: 'finished'});\n    }\n  }\n  ngOnChanges(changes: SimpleChanges) {\n    // 回显默认值\n    if (changes.defaultValue && changes.defaultValue.currentValue) {\n      this.fileList = []\n      this.fileList.push({ file: changes.defaultValue.currentValue, status: 'finished'})\n    }\n\n\n  }\n\n  ngAfterViewInit(): void {\n    this.fileDomInitUpload();\n  }\n\n  fileDomInitUpload() {\n    const { inputRef } = this;\n    const _ = this;\n    this.inputRef.nativeElement.onchange = (e) => {\n      const files = inputRef.nativeElement.files;\n      for (let i = 0, ii = files.length; i < ii; i++) {\n        _.uploadFile(files[i]);\n      }\n    };\n  }\n\n  uploadFile(file: File): void {\n    this.uploading = true;\n    this.showModalLoading = true;\n    this.fileList.push({\n      file,\n      status: 'uncommit'\n    });\n    this.uploadFileFn(file, null, this.http).subscribe(data => {\n      this.uploadResult = data;\n      this.success = true;\n      this.fileList[0].status = 'finished';\n      this.fileList[0].downloadUrl = data.downloadUrl;\n      this.fileList[0].previewUrl = data.previewUrl;\n      console.log('this.fileList', this.fileList);\n      this.resultEvent.emit(this.uploadResult);\n      this.showModalLoading = false;\n      this.showModalSuccess = true;\n      setTimeout(() => {\n        this.showModalSuccess = false;\n        this.uploading = false;\n      }, 1000);\n    }, err => {\n      console.log(err);\n      this.uploadResult = err;\n      this.showModalLoading = false;\n      this.error = true;\n    })\n  }\n\n  chooseFile(): void {\n    if (this.disabled) {\n      return;\n    }\n    if (this.fileList.length === 0) {\n      this.inputRef.nativeElement.click();\n      this.resetTouch.emit();\n    }\n  }\n\n  handleDelete(): void {\n    this.inputRef.nativeElement.value = '';\n    this.fileList = [];\n    this.success = false;\n    this.error = false;\n  }\n\n  reUpload(): void {\n    this.handleDelete();\n    this.chooseFile();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UploadComponent } from './upload.component';\n\n\n\n@NgModule({\n  declarations: [UploadComponent],\n  exports: [UploadComponent],\n  imports: [\n    CommonModule\n  ]\n})\nexport class UploadModule { }\n"]}