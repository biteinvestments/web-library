{"version":3,"file":"bite-ui-button.umd.js","sources":["../../projects/bite-ui/button/button.component.ts","../../projects/bite-ui/button/button.module.ts","../../projects/bite-ui/button/public-api.ts","../../projects/bite-ui/button/bite-ui-button.ts"],"sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'bite-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss']\n})\nexport class ButtonComponent implements OnInit {\n\n \n  @Input() type?: 'flat' | 'stroked' | 'basic' | 'raised' = 'basic';\n  @Input() disabled?: boolean;\n  @Input() loading?: boolean = false;\n  @Input() translate?: 'denied' | 'access' = 'access';\n  @Input() color?: 'primary' | 'accent' | 'warn' | '' = '';\n  @Input() dark?: boolean = false;\n  @Input() full?: boolean = false;\n  @Input() size?: 'mini' | 'middle' | 'large' = 'middle';\n  @Input() border?: boolean;\n  @Output() clickEvent = new EventEmitter<any>();\n\n  get _disabled(): boolean {\n    return this.disabled || this.loading;\n  }\n\n  get classname(): string {\n    const list: any[] = [];\n    if (this.full) {\n      list.push('bi-button-full');\n    }\n    if (this.size) {\n      list.push(`bi-${this.size}-button`);\n    }\n    if (this.border) {\n      list.push('bi-border-button');\n    }\n    return list.join(' ');\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  handleClick(event: any): void {\n    if (this._disabled) {\n      return;\n    }\n    this.clickEvent.emit(event);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonComponent } from './button.component';\n\nimport { MatButtonModule } from '@angular/material/button';\n\n\n@NgModule({\n  declarations: [ButtonComponent],\n  exports: [ButtonComponent],\n  imports: [\n    CommonModule,\n    MatButtonModule\n  ]\n})\nexport class ButtonModule { }\n","/*\n* Public API Surface of Button\n*/\nexport * from './button.component';\nexport * from './button.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["EventEmitter","Component","Input","Output","NgModule","CommonModule","MatButtonModule"],"mappings":";;;;;;;QAuCE;YA7BS,SAAI,GAA6C,OAAO,CAAC;YAEzD,YAAO,GAAa,KAAK,CAAC;YAC1B,cAAS,GAAyB,QAAQ,CAAC;YAC3C,UAAK,GAAwC,EAAE,CAAC;YAChD,SAAI,GAAa,KAAK,CAAC;YACvB,SAAI,GAAa,KAAK,CAAC;YACvB,SAAI,GAAiC,QAAQ,CAAC;YAE7C,eAAU,GAAG,IAAIA,iBAAY,EAAO,CAAC;SAoB9B;QAlBjB,sBAAI,sCAAS;iBAAb;gBACE,OAAO,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC;aACtC;;;WAAA;QAED,sBAAI,sCAAS;iBAAb;gBACE,IAAM,IAAI,GAAU,EAAE,CAAC;gBACvB,IAAI,IAAI,CAAC,IAAI,EAAE;oBACb,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;iBAC7B;gBACD,IAAI,IAAI,CAAC,IAAI,EAAE;oBACb,IAAI,CAAC,IAAI,CAAC,QAAM,IAAI,CAAC,IAAI,YAAS,CAAC,CAAC;iBACrC;gBACD,IAAI,IAAI,CAAC,MAAM,EAAE;oBACf,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;iBAC/B;gBACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACvB;;;WAAA;QAID,kCAAQ,GAAR;SACC;QAED,qCAAW,GAAX,UAAY,KAAU;YACpB,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,OAAO;aACR;YACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC7B;;;;gBA/CFC,cAAS,SAAC;oBACT,QAAQ,EAAE,aAAa;oBACvB,u7CAAsC;;iBAEvC;;;;uBAIEC,UAAK;2BACLA,UAAK;0BACLA,UAAK;4BACLA,UAAK;wBACLA,UAAK;uBACLA,UAAK;uBACLA,UAAK;uBACLA,UAAK;yBACLA,UAAK;6BACLC,WAAM;;;;QCJT;;;;;gBARCC,aAAQ,SAAC;oBACR,YAAY,EAAE,CAAC,eAAe,CAAC;oBAC/B,OAAO,EAAE,CAAC,eAAe,CAAC;oBAC1B,OAAO,EAAE;wBACPC,mBAAY;wBACZC,sBAAe;qBAChB;iBACF;;;ICdD;;;;ICAA;;;;;;;;;;;;;;;"}